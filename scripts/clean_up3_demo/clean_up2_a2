#!/bin/bash
#
# clean_up: (re)move FILEs from known issues
# use optional -v to let mv and rm print what they do
#
#
# return code = 1 if parameter 1 isn't "-v"
# this script does not check whether or not files are to be
# removed, it simply moves all files and disregards error messages
ERRDIR=/ext/schenker/data/error/
BAYR=/ext/schenker/support/error/BAYRE2AEIM/
SUPERR=/ext/schenker/support/error/
SYST=/ext/schenker/support/error/SYSTXERROR
CISCAO0002=/ext/schenker/support/error/APAC/CISCAO0002/
CISCABTS09=/ext/schenker/support/error/CISCABTS09/
CISCAI3B18=/ext/schenker/support/error/CISCAI3B18/
CISCAU3B18=/ext/schenker/support/error/CISCAU3B18/


[ "-v" == "$1" ] && VERBOSE=1
if [ $VERBOSE ]
then
        echo "*********************************************************"
        echo "clean_up2 - verbose mode - show what's being (re-)moved. "
        echo "*********************************************************"
fi


#check if parameter 1 is either emtpy or -v. If not -> print help and quit
if [ -n "$1" ]
then
        if [ "-v" != "$1" ]
	        then
	                echo "syntax: $0 [-v]"
	                echo "   -v: verbose. print what will be (re)moved"
	                exit 1
        fi
fi
#from this point on $1 is either empty or -v
				
# create log entry in statlog file of the current day

echo "clean_up2 has been started on host" $HOSTNAME "on" `date +%Y.%m.%d.` "at" `date +%H:%M:%S` >> /ext/schenker/support/statlog/clean_up/log/"$HOSTNAME"_clean_up_log_of_`date +%Y.%m.%d`

# create log entry in statlog csv file of the current day
echo $HOSTNAME";""clean_up2;"`date +%Y.%m.%d`";"`date +%H:%M:%S`";" >> /ext/schenker/support/statlog/csv/"$HOSTNAME"_`date +%Y%m%d`.csv

# GSD#1747978 CISCABTS09
if [  `ls $ERRDIR/CISCABTS09* 2>/dev/null | wc -l ` -gt 0 ]
then
        for file in `gegrep -l 'O3B18R12-.*-0-SHK-.*-.*.zip' $ERRDIR/CISCABTS09*att | awk -F"." '{print $1"."$2"."$3"."$4}'`
        do
		/opt/sfw/bin/mv $1 $file* $CISCABTS09
        done
fi

# GSD#1747978 CISCAI3B18
if [  `ls $ERRDIR/CISCAI3B18* 2>/dev/null | wc -l ` -gt 0 ]
then
        for file in `gegrep -l 'O3B18R12-.*-0-SLC.*-.*-.*' $ERRDIR/CISCAI3B18*att | awk -F"." '{print $1"."$2"."$3"."$4}'`
	        do
	                /opt/sfw/bin/mv $1 $file* $CISCAI3B18
	        done
fi

#GSD#2244663 SYSTXERROR - SAMS_RULE_inbound 
#added by LH 06.02.2015
if [ `ls $ERRDIR/SYSTXERROR* 2>/dev/null | wc -l` -gt 0 ]
then
	#Conditions
	#1. SYSTXERROR files 
	#2. att file contains string SAMS_RULE_inbound
	#3. att file contains file pattern SHTB.*.edi 
	#4. arc file contains string GS*SM*
	#5. arc file contains string ST*204*
	FILELIST=`egrep -l 'ST\*204\*' $(egrep -l 'GS\*SM\*' $(egrep -l 'SHTB.*\.edi' $(grep -l SAMS_RULE_inbound $ERRDIR/SYSTXERROR*.att)|sed 's#.att$#.arc#')) | sed 's#.arc$#.*#'`
	for file in $FILELIST
	do
		/opt/sfw/bin/mv $1 $file* $SYST
	done	
fi	

# GSD #2431997 CISCAU3B18
if [  `ls $ERRDIR/CISCAU3B18* 2>/dev/null | wc -l ` -gt 0 ]
then
	for file in `gegrep -l 'O3B18R12-.*-0-SLC.*-.*-.*' $ERRDIR/CISCAU3B18*att | awk -F"." '{print $1"."$2"."$3"."$4}'`
        do
        	/opt/sfw/bin/mv $1 $file* $CISCAU3B18
        done
fi


if [  `ls $ERRDIR/CISCAI3B18* 2>/dev/null | wc -l ` -gt 0 ]
then
        for file in `gegrep -l 'O3B18R12-.*-.*-.*' $ERRDIR/CISCAI3B18*att | awk -F"." '{print $1"."$2"."$3"."$4}'`
        do
		/opt/sfw/bin/mv $1 $file* $CISCAI3B18
        done
fi	


#SYSTXERROR 
#APPLEALLAN 997 files sent to us for 858 files (which is still not implemented)
#LH 09.03.2016
if [ `ls $ERRDIR/SYSTXERROR* 2>/dev/null | wc -l` -gt 0 ]
then 
	#search in SYSTXERROR files for pattern and strip off the .arc at the end 
	for file in `ggrep -l "AK2\*858" $ERRDIR/SYSTXERROR*arc | awk -F"." '{print $1"."$2"."$3"."$4}'`
	do
		#check for Rule in att file and move files if found 
		#I explicitly do NOT use ggrep -q as suggested by some as this will make return grep a 0
		#even when an error occured which is not what I want, because then the files would be moved
		#without us understanding what the error was. 
		ggrep "APPLEALLAN" $file.arc.att >/dev/null 2>&1  && /opt/sfw/bin/mv $1 $file* $SYST
	done
fi	

# PRB0042221/INC000869531 
# BAYRE2AEIM: Confirmed with Jantz Marcel that we can ignore this issue
# archive corrupt Bayer messages
if [ `ls $ERRDIR/BAYRE2AEIM*  2>/dev/null | wc -l ` -gt 0 ]
then
        #$1 is needed for verbose commandline parameter
        /opt/sfw/bin/mv $1 $ERRDIR/BAYRE2AEIM* $BAYR
fi
